{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"E:\\\\Code\\\\CIS454\\\\BusUFinal\\\\screens\\\\MapScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React, { Component } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { locations } from \"./Data\";\n\nvar MapScreen = function (_React$Component) {\n  _inherits(MapScreen, _React$Component);\n\n  var _super = _createSuper(MapScreen);\n\n  function MapScreen(props) {\n    _classCallCheck(this, MapScreen);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(MapScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(MapView, {\n        style: styles.map,\n        initialRegion: {\n          latitude: 43.0729,\n          longitude: -76.131502,\n          latitudeDelta: 1,\n          longitudeDelta: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(MapView.Marker, {\n        coordinate: {\n          latitude: 43.0729,\n          longitude: -76.131502\n        },\n        title: \"title\",\n        description: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), locations.map(function (marker) {\n        return React.createElement(Marker, {\n          coordinate: {\n            latitude: marker.latitude,\n            longitude: marker.longitude\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }\n        });\n      })));\n    }\n  }]);\n\n  return MapScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});\nexport default MapScreen;","map":{"version":3,"sources":["E:/Code/CIS454/BusUFinal/screens/MapScreen.js"],"names":["React","Component","MapView","Marker","Location","Permissions","NavigationContainer","createStackNavigator","locations","MapScreen","props","navigation","styles","container","map","latitude","longitude","latitudeDelta","longitudeDelta","marker","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","position","top","left","right","bottom"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,IAAiBC,MAAjB,QAA8B,mBAA9B;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AAEA,SAASC,SAAT;;IAEQC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AAAA,UACDC,UADC,GACa,KAAKD,KADlB,CACDC,UADC;AAGT,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAED,MAAM,CAACE,GAAvB;AACF,QAAA,aAAa,EAAE;AACXC,UAAAA,QAAQ,EAAE,OADC;AAEXC,UAAAA,SAAS,EAAE,CAAC,SAFD;AAGXC,UAAAA,aAAa,EAAE,CAHJ;AAIXC,UAAAA,cAAc,EAAE;AAJL,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASJ,oBAAC,OAAD,CAAS,MAAT;AACI,QAAA,UAAU,EAAE;AAACH,UAAAA,QAAQ,EAAE,OAAX;AACZC,UAAAA,SAAS,EAAE,CAAC;AADA,SADhB;AAGI,QAAA,KAAK,EAAE,OAHX;AAII,QAAA,WAAW,EAAE,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATI,EAiBAR,SAAS,CAACM,GAAV,CAAc,UAAAK,MAAM;AAAA,eAClB,oBAAC,MAAD;AACD,UAAA,UAAU,EAAI;AAACJ,YAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAAlB;AACZC,YAAAA,SAAS,EAAEG,MAAM,CAACH;AADN,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkB;AAAA,OAApB,CAjBA,CADN,CADF;AA+BC;;;;EAvCqBhB,KAAK,CAACC,S;;AA0ChC,IAAMW,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO7BX,EAAAA,GAAG,EAAE;AACHY,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,GAAG,EAAE,CAFF;AAGHC,IAAAA,IAAI,EAAE,CAHH;AAIHC,IAAAA,KAAK,EAAE,CAJJ;AAKHC,IAAAA,MAAM,EAAE;AALL;AAPwB,CAAlB,CAAf;AAgBC,eAAerB,SAAf","sourcesContent":["//remember to import imports in the cd of the file\nimport React, {Component} from 'react';\nimport MapView, {Marker} from 'react-native-maps';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport { locations } from './Data'\n\n  class MapScreen extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      const{navigation} = this.props;\n\n    return(\n      <View style={styles.container}>\n            <MapView style={styles.map}\n          initialRegion={{\n              latitude: 43.0729,\n              longitude: -76.131502,\n              latitudeDelta: 1,\n              longitudeDelta: 1,\n          }}\n        >\n          \n        <MapView.Marker\n            coordinate={{latitude: 43.0729,\n            longitude: -76.131502}}\n            title={\"title\"}\n            description={\"description\"}\n         />\n          \n          {\n            locations.map(marker => (\n              <Marker\n             coordinate = {{latitude: marker.latitude,\n               longitude: marker.longitude}}\n              />\n            ))\n          }\n          \n      </MapView>\n      </View>\n\n    );\n    }\n  }\n  \nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n    map: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }\n});\n\n export default MapScreen;\n\n\n\n\n  \n  \n"]},"metadata":{},"sourceType":"module"}