{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"E:\\\\Code\\\\CIS454\\\\BusUFinal\\\\screens\\\\CreateAccountScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationActions } from \"react-navigation\";\n\nvar CreateAccountScreen = function (_React$Component) {\n  _inherits(CreateAccountScreen, _React$Component);\n\n  var _super = _createSuper(CreateAccountScreen);\n\n  function CreateAccountScreen() {\n    _classCallCheck(this, CreateAccountScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CreateAccountScreen, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.createAccountTextHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 8\n        }\n      }, \" Create Account Screen\"), React.createElement(TextInput, {\n        style: styles.usernameinput,\n        placeholder: \"username\",\n        returnKeyType: \"next\",\n        autoCapitalize: false,\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.passwordinput,\n        placeholder: \"Password\",\n        returnKeyType: \"next\",\n        autoCapitalize: false,\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 10\n        }\n      }), React.createElement(TextInput, {\n        style: styles.emailaddressinput,\n        placeholder: \"Email Address\",\n        autoCapitalize: \"none\",\n        returnKeyType: \"next\",\n        autoCapitalize: false,\n        autoCorrect: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        title: \"Sign Up\",\n        onPress: function onPress() {\n          return navigation.navigate(\"MapScreen\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CreateAccountScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"#fffafa\"\n  },\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  signinconfirm: {\n    borderRadius: 5,\n    color: \"orange\",\n    top: 100\n  },\n  homeText: {\n    top: -100,\n    color: 'orange',\n    fontSize: 50,\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    borderRadius: 100\n  },\n  chooseOptionText: {\n    top: -50,\n    color: 'orange',\n    fontSize: 25,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  },\n  usernameinput: {\n    top: -135,\n    paddingLeft: 20,\n    height: 50,\n    fontSize: 30,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    marginBottom: 30,\n    color: '#34495e',\n    width: 200\n  },\n  passwordinput: {\n    top: -125,\n    paddingLeft: 20,\n    height: 50,\n    fontSize: 30,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    marginBottom: 30,\n    color: '#34495e',\n    width: 200\n  },\n  createAccountTextHeader: {\n    top: -175,\n    color: 'orange',\n    fontSize: 35,\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    borderRadius: 100\n  },\n  emailaddressinput: {\n    top: -120,\n    paddingLeft: 20,\n    height: 50,\n    fontSize: 30,\n    backgroundColor: 'white',\n    borderWidth: 1,\n    marginBottom: 30,\n    color: '#34495e',\n    width: 250\n  },\n  signinpagetext: {\n    top: -170,\n    paddingLeft: 50,\n    height: 100,\n    fontSize: 50,\n    marginBottom: 15,\n    color: 'orange',\n    width: 400,\n    alignItems: \"center\"\n  }\n});\nexport default CreateAccountScreen;","map":{"version":3,"sources":["E:/Code/CIS454/BusUFinal/screens/CreateAccountScreen.js"],"names":["React","NavigationContainer","createStackNavigator","NavigationActions","CreateAccountScreen","navigation","props","styles","createAccountTextHeader","usernameinput","passwordinput","emailaddressinput","navigate","Component","StyleSheet","create","container","flex","justifyContent","alignItems","color","button","paddingHorizontal","paddingVertical","marginVertical","borderRadius","signinconfirm","top","homeText","fontSize","fontWeight","textAlign","chooseOptionText","paddingLeft","height","backgroundColor","borderWidth","marginBottom","width","signinpagetext"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Button, Image,TextInput } from \"react-native\";\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport { NavigationActions } from \"react-navigation\";\r\n\r\nclass CreateAccountScreen extends React.Component {\r\nrender(){\r\n  const{navigation} = this.props;\r\n  return(\r\n    <View>\r\n       <Text style = {styles.createAccountTextHeader}> Create Account Screen \r\n        </Text>\r\n        <TextInput style = {styles.usernameinput}\r\n        placeholder = \"username\"\r\n        returnKeyType = \"next\"\r\n        autoCapitalize = {false}\r\n        autoCorrect = {false}\r\n      \r\n        />\r\n         <TextInput style = {styles.passwordinput}\r\n          placeholder = \"Password\"\r\n          returnKeyType = \"next\"\r\n          autoCapitalize = {false}\r\n          autoCorrect = {false}\r\n          />\r\n          <TextInput style = {styles.emailaddressinput}\r\n          placeholder = \"Email Address\"\r\n          autoCapitalize = \"none\"\r\n          returnKeyType = \"next\"\r\n          autoCapitalize = {false}\r\n          autoCorrect = {false}\r\n          />\r\n        <Button title=\"Sign Up\" onPress={() => navigation.navigate(\"MapScreen\")} />\r\n\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      color: \"#fffafa\",\r\n    },\r\n    button: {\r\n      paddingHorizontal: 20,\r\n      paddingVertical: 10,\r\n      marginVertical: 10,\r\n      borderRadius: 5\r\n    },\r\n    signinconfirm: {\r\n      borderRadius: 5,\r\n      color: \"orange\",\r\n      top: 100,\r\n    },\r\n    homeText:{\r\n      top: -100,\r\n      color: 'orange',\r\n      fontSize: 50,\r\n      fontWeight:'bold',\r\n      textAlign:\"center\",\r\n      borderRadius: 100,\r\n  \r\n    },\r\n    chooseOptionText:{\r\n      top: -50,\r\n      color: 'orange',\r\n      fontSize: 25,\r\n      fontWeight:'bold',\r\n      textAlign:\"center\"\r\n    },\r\n    usernameinput: {\r\n      top: -135,\r\n      paddingLeft: 20,\r\n      height: 50,\r\n      fontSize: 30,\r\n      backgroundColor: 'white',\r\n      borderWidth: 1,\r\n      marginBottom: 30,\r\n      color: '#34495e',\r\n      width: 200,\r\n  },\r\n  passwordinput: {\r\n    top: -125,\r\n    paddingLeft: 20,\r\n    height: 50,\r\n    fontSize: 30,\r\n    backgroundColor: 'white',\r\n    borderWidth: 1,\r\n    marginBottom: 30,\r\n    color: '#34495e',\r\n    width: 200,\r\n  },\r\n  createAccountTextHeader: {\r\n    top: -175,\r\n    color: 'orange',\r\n    fontSize: 35,\r\n    fontWeight:'bold',\r\n    textAlign:\"center\",\r\n    borderRadius: 100,\r\n  },\r\n  emailaddressinput: {\r\n    top: -120,\r\n    paddingLeft: 20,\r\n    height: 50,\r\n    fontSize: 30,\r\n    backgroundColor: 'white',\r\n    borderWidth: 1,\r\n    marginBottom: 30,\r\n    color: '#34495e',\r\n    width: 250,\r\n  \r\n  },\r\n  signinpagetext: {\r\n    top: -170,\r\n    paddingLeft: 50,\r\n    height: 100,\r\n    fontSize: 50,\r\n    marginBottom: 15,\r\n    color: 'orange',\r\n    width: 400,\r\n    alignItems: \"center\"\r\n  \r\n  },\r\n  \r\n  \r\n  });\r\n\r\n\r\n\r\nexport default CreateAccountScreen;\r\n"]},"metadata":{},"sourceType":"module"}